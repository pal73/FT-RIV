; generated by ARM C/C++ Compiler, 4.1 [Build 644]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\EXE\25lc640.o --asm_dir=.\ --list_dir=.\ --depend=.\EXE\25lc640.d --feedback=.\EXE\UKU_220_IPS_TERMOKOMPENSAT.fed --cpu=Cortex-M3 --apcs=interwork -O1 -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\INC\NXP\LPC17xx -D__MICROLIB -DUKU_220_IPS_TERMOKOMPENSAT -DUKU2071x --omf_browse=.\EXE\25lc640.crf 25lc640.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  spi1 PROC
;;;9      
;;;10     char spi1(char in)
000000  49ff              LDR      r1,|L1.1024|
;;;11     {
;;;12     
;;;13      
;;;14     
;;;15     LPC_SPI->SPDR=in;
000002  6088              STR      r0,[r1,#8]
                  |L1.4|
;;;16     while(!(LPC_SPI->SPSR&(1<<7)));
000004  6848              LDR      r0,[r1,#4]
000006  0600              LSLS     r0,r0,#24
000008  d5fc              BPL      |L1.4|
;;;17     return LPC_SPI->SPDR;
00000a  6888              LDR      r0,[r1,#8]
00000c  b2c0              UXTB     r0,r0
;;;18     
;;;19      
;;;20     
;;;21     }
00000e  4770              BX       lr
;;;22     
                          ENDP

                  spi1_config PROC
;;;26     //настройка SPI1
;;;27     void spi1_config(void)
000010  48fc              LDR      r0,|L1.1028|
;;;28     { 
;;;29     
;;;30     SET_REG( LPC_PINCON->PINSEL0, 3, 15*2, 2);
000012  6801              LDR      r1,[r0,#0]
000014  f0414140          ORR      r1,r1,#0xc0000000
000018  6001              STR      r1,[r0,#0]
;;;31     SET_REG( LPC_PINCON->PINSEL1, 0, (16-16)*2, 2);
00001a  6841              LDR      r1,[r0,#4]
00001c  f0210103          BIC      r1,r1,#3
000020  6041              STR      r1,[r0,#4]
;;;32     SET_REG( LPC_PINCON->PINSEL1, 3, (17-16)*2, 2);
000022  6841              LDR      r1,[r0,#4]
000024  f041010c          ORR      r1,r1,#0xc
000028  6041              STR      r1,[r0,#4]
;;;33     SET_REG( LPC_PINCON->PINSEL1, 3, (18-16)*2, 2); 
00002a  6841              LDR      r1,[r0,#4]
00002c  f0410130          ORR      r1,r1,#0x30
000030  6041              STR      r1,[r0,#4]
;;;34     /*
;;;35     S1SPCCR=100;
;;;36     S1SPCR=0x3f; */
;;;37     
;;;38     LPC_SPI->SPCCR=8;
000032  48f3              LDR      r0,|L1.1024|
000034  f04f0108          MOV      r1,#8
000038  60c1              STR      r1,[r0,#0xc]
;;;39     LPC_SPI->SPCR=0x20;
00003a  f04f0120          MOV      r1,#0x20
00003e  6001              STR      r1,[r0,#0]
;;;40     }
000040  4770              BX       lr
;;;41     
                          ENDP

                  spi1_unconfig PROC
;;;62     //выключение SPI1
;;;63     void spi1_unconfig(void)
000042  48f0              LDR      r0,|L1.1028|
;;;64     { 
;;;65     
;;;66     SET_REG( LPC_PINCON->PINSEL0, 0, 15*2, 2);
000044  6801              LDR      r1,[r0,#0]
000046  f0214140          BIC      r1,r1,#0xc0000000
00004a  6001              STR      r1,[r0,#0]
;;;67     SET_REG( LPC_PINCON->PINSEL1, 0, (16-16)*2, 2);
00004c  6841              LDR      r1,[r0,#4]
00004e  f0210103          BIC      r1,r1,#3
000052  6041              STR      r1,[r0,#4]
;;;68     SET_REG( LPC_PINCON->PINSEL1, 0, (17-16)*2, 2);
000054  6841              LDR      r1,[r0,#4]
000056  f021010c          BIC      r1,r1,#0xc
00005a  6041              STR      r1,[r0,#4]
;;;69     SET_REG( LPC_PINCON->PINSEL1, 0, (18-16)*2, 2);
00005c  6841              LDR      r1,[r0,#4]
00005e  f0210130          BIC      r1,r1,#0x30
000062  6041              STR      r1,[r0,#4]
;;;70     
;;;71     LPC_SPI->SPCR=0x00;
000064  49e6              LDR      r1,|L1.1024|
000066  f04f0000          MOV      r0,#0
00006a  6008              STR      r0,[r1,#0]
;;;72     }
00006c  4770              BX       lr
;;;73     
                          ENDP

                  lc640_wren PROC
;;;75     //Разрешение записи
;;;76     void lc640_wren(void)
00006e  b500              PUSH     {lr}
;;;77     {
;;;78     
;;;79     spi1_config();
000070  f7fffffe          BL       spi1_config
;;;80     
;;;81     CS_ON
000074  4ae4              LDR      r2,|L1.1032|
000076  6810              LDR      r0,[r2,#0]
000078  f4401080          ORR      r0,r0,#0x100000
00007c  6010              STR      r0,[r2,#0]
00007e  69d0              LDR      r0,[r2,#0x1c]
000080  f4401080          ORR      r0,r0,#0x100000
000084  61d0              STR      r0,[r2,#0x1c]
;;;82     
;;;83     spi1(0x06); 
000086  f04f0006          MOV      r0,#6
00008a  f7fffffe          BL       spi1
;;;84     
;;;85     CS_OFF
00008e  6810              LDR      r0,[r2,#0]
000090  f4401080          ORR      r0,r0,#0x100000
000094  6010              STR      r0,[r2,#0]
000096  6990              LDR      r0,[r2,#0x18]
000098  f4401080          ORR      r0,r0,#0x100000
00009c  6190              STR      r0,[r2,#0x18]
;;;86     
;;;87     spi1_unconfig();
00009e  f85deb04          POP      {lr}
0000a2  e7fe              B        spi1_unconfig
;;;88     }
;;;89     
                          ENDP

                  lc640_rdsr PROC
;;;91     //Чтение из м-мы регистра состояния
;;;92     char lc640_rdsr(void)
0000a4  b500              PUSH     {lr}
;;;93     {
;;;94     char temp;
;;;95     
;;;96     spi1_config();
0000a6  f7fffffe          BL       spi1_config
;;;97     CS_ON
0000aa  4ad7              LDR      r2,|L1.1032|
0000ac  6810              LDR      r0,[r2,#0]
0000ae  f4401080          ORR      r0,r0,#0x100000
0000b2  6010              STR      r0,[r2,#0]
0000b4  69d0              LDR      r0,[r2,#0x1c]
0000b6  f4401080          ORR      r0,r0,#0x100000
0000ba  61d0              STR      r0,[r2,#0x1c]
;;;98     spi1(0x05);
0000bc  f04f0005          MOV      r0,#5
0000c0  f7fffffe          BL       spi1
;;;99     temp=spi1(0xff);
0000c4  20ff              MOVS     r0,#0xff
0000c6  f7fffffe          BL       spi1
0000ca  4603              MOV      r3,r0
;;;100    CS_OFF
0000cc  6811              LDR      r1,[r2,#0]
0000ce  f4411180          ORR      r1,r1,#0x100000
0000d2  6011              STR      r1,[r2,#0]
0000d4  6991              LDR      r1,[r2,#0x18]
0000d6  f4411180          ORR      r1,r1,#0x100000
0000da  6191              STR      r1,[r2,#0x18]
;;;101    spi1_unconfig();
0000dc  f7fffffe          BL       spi1_unconfig
;;;102    return temp;
0000e0  4618              MOV      r0,r3
;;;103    }
0000e2  bd00              POP      {pc}
;;;104    
                          ENDP

                  lc640_read PROC
;;;106    //Чтение из м-мы байта по адр. ADR
;;;107    int lc640_read(int ADR)
0000e4  b501              PUSH     {r0,lr}
                  |L1.230|
;;;108    {
;;;109    int temp;
;;;110    temp=0;
;;;111    
;;;112    while(lc640_rdsr()&0x01)
0000e6  f7fffffe          BL       lc640_rdsr
0000ea  07c0              LSLS     r0,r0,#31
0000ec  d1fb              BNE      |L1.230|
;;;113    	{
;;;114    	}
;;;115    spi1_config();
0000ee  f7fffffe          BL       spi1_config
;;;116    CS_ON
0000f2  4ac5              LDR      r2,|L1.1032|
0000f4  6810              LDR      r0,[r2,#0]
0000f6  f4401080          ORR      r0,r0,#0x100000
0000fa  6010              STR      r0,[r2,#0]
0000fc  69d0              LDR      r0,[r2,#0x1c]
0000fe  f4401080          ORR      r0,r0,#0x100000
000102  61d0              STR      r0,[r2,#0x1c]
;;;117    CS_ON
000104  6810              LDR      r0,[r2,#0]
000106  f4401080          ORR      r0,r0,#0x100000
00010a  6010              STR      r0,[r2,#0]
00010c  69d0              LDR      r0,[r2,#0x1c]
00010e  f4401080          ORR      r0,r0,#0x100000
000112  61d0              STR      r0,[r2,#0x1c]
;;;118    //temp_short[0]=PINSEL1;	
;;;119    //
;;;120    //IO0DIR|=1UL<<17;
;;;121    //IO0CLR|=1UL<<17;
;;;122    spi1(0x03);
000114  f04f0003          MOV      r0,#3
000118  f7fffffe          BL       spi1
;;;123    temp=*(((char*)&ADR)+1);
00011c  f89d0001          LDRB     r0,[sp,#1]
;;;124    spi1(temp);
000120  f7fffffe          BL       spi1
;;;125    temp=*((char*)&ADR);
000124  f89d0000          LDRB     r0,[sp,#0]
;;;126    spi1(temp);
000128  f7fffffe          BL       spi1
;;;127    temp=spi1(0xff);
00012c  20ff              MOVS     r0,#0xff
00012e  f7fffffe          BL       spi1
000132  4603              MOV      r3,r0
;;;128    //IO0SET|=1UL<<17;
;;;129    CS_OFF
000134  6810              LDR      r0,[r2,#0]
000136  f4401080          ORR      r0,r0,#0x100000
00013a  6010              STR      r0,[r2,#0]
00013c  6990              LDR      r0,[r2,#0x18]
00013e  f4401080          ORR      r0,r0,#0x100000
000142  6190              STR      r0,[r2,#0x18]
;;;130    CS_OFF
000144  6810              LDR      r0,[r2,#0]
000146  f4401080          ORR      r0,r0,#0x100000
00014a  6010              STR      r0,[r2,#0]
00014c  6990              LDR      r0,[r2,#0x18]
00014e  f4401080          ORR      r0,r0,#0x100000
000152  6190              STR      r0,[r2,#0x18]
;;;131    spi1_unconfig();
000154  f7fffffe          BL       spi1_unconfig
;;;132    return temp;
000158  4618              MOV      r0,r3
;;;133    
;;;134    }
00015a  bd08              POP      {r3,pc}
;;;135    
                          ENDP

                  lc640_read_int PROC
;;;137    //Чтение из м-мы слова по адр. ADR
;;;138    int lc640_read_int(int ADR)
00015c  b501              PUSH     {r0,lr}
                  |L1.350|
;;;139    {
;;;140    char temp;
;;;141    int temp_i;
;;;142    
;;;143    
;;;144    //LPC_GPIO0->FIODIR|=0x00000002;
;;;145    //LPC_GPIO0->FIOSET|=0x00000002;
;;;146    
;;;147    
;;;148    
;;;149    while(lc640_rdsr()&0x01)
00015e  f7fffffe          BL       lc640_rdsr
000162  07c0              LSLS     r0,r0,#31
000164  d1fb              BNE      |L1.350|
;;;150    	{
;;;151    	}
;;;152    
;;;153    //lc640_rdsr();
;;;154    //IO0DIR_bit.P0_11=1;
;;;155    //IO0SET_bit.P0_11=1;
;;;156    spi1_config();
000166  f7fffffe          BL       spi1_config
;;;157    CS_ON
00016a  4aa7              LDR      r2,|L1.1032|
00016c  6810              LDR      r0,[r2,#0]
00016e  f4401080          ORR      r0,r0,#0x100000
000172  6010              STR      r0,[r2,#0]
000174  69d0              LDR      r0,[r2,#0x1c]
000176  f4401080          ORR      r0,r0,#0x100000
00017a  61d0              STR      r0,[r2,#0x1c]
;;;158    spi1(0x03);
00017c  f04f0003          MOV      r0,#3
000180  f7fffffe          BL       spi1
;;;159    temp=*(((char*)&ADR)+1);
000184  f89d0001          LDRB     r0,[sp,#1]
;;;160    spi1(temp);
000188  f7fffffe          BL       spi1
;;;161    temp=*((char*)&ADR);
00018c  f89d0000          LDRB     r0,[sp,#0]
;;;162    spi1(temp);
000190  f7fffffe          BL       spi1
;;;163    temp=spi1(0xff);
000194  20ff              MOVS     r0,#0xff
000196  f7fffffe          BL       spi1
00019a  4603              MOV      r3,r0
;;;164    temp_i=spi1(0xff);
00019c  f04f00ff          MOV      r0,#0xff
0001a0  f7fffffe          BL       spi1
;;;165    temp_i<<=8;
0001a4  ea4f2000          LSL      r0,r0,#8
;;;166    temp_i+=temp;
0001a8  4403              ADD      r3,r3,r0
;;;167    CS_OFF
0001aa  6810              LDR      r0,[r2,#0]
0001ac  f4401080          ORR      r0,r0,#0x100000
0001b0  6010              STR      r0,[r2,#0]
0001b2  6990              LDR      r0,[r2,#0x18]
0001b4  f4401080          ORR      r0,r0,#0x100000
0001b8  6190              STR      r0,[r2,#0x18]
;;;168    CS_OFF
0001ba  6810              LDR      r0,[r2,#0]
0001bc  f4401080          ORR      r0,r0,#0x100000
0001c0  6010              STR      r0,[r2,#0]
0001c2  6990              LDR      r0,[r2,#0x18]
0001c4  f4401080          ORR      r0,r0,#0x100000
0001c8  6190              STR      r0,[r2,#0x18]
;;;169    spi1_unconfig();
0001ca  f7fffffe          BL       spi1_unconfig
;;;170    
;;;171    //LPC_GPIO0->FIOCLR|=0x00000002;
;;;172    return temp_i;
0001ce  4618              MOV      r0,r3
;;;173    }
0001d0  bd08              POP      {r3,pc}
;;;174    
                          ENDP

                  lc640_read_long PROC
;;;176    //Чтение из м-мы 4 байт по адр. ADR
;;;177    long lc640_read_long(int ADR)
0001d2  b531              PUSH     {r0,r4,r5,lr}
                  |L1.468|
;;;178    {
;;;179    char temp0,temp1,temp2;
;;;180    long temp_i;
;;;181    while(lc640_rdsr()&0x01)
0001d4  f7fffffe          BL       lc640_rdsr
0001d8  07c0              LSLS     r0,r0,#31
0001da  d1fb              BNE      |L1.468|
;;;182    	{
;;;183    	}
;;;184    spi1_config();
0001dc  f7fffffe          BL       spi1_config
;;;185    CS_ON
0001e0  4a89              LDR      r2,|L1.1032|
0001e2  6810              LDR      r0,[r2,#0]
0001e4  f4401080          ORR      r0,r0,#0x100000
0001e8  6010              STR      r0,[r2,#0]
0001ea  69d0              LDR      r0,[r2,#0x1c]
0001ec  f4401080          ORR      r0,r0,#0x100000
0001f0  61d0              STR      r0,[r2,#0x1c]
;;;186    spi1(0x03);
0001f2  f04f0003          MOV      r0,#3
0001f6  f7fffffe          BL       spi1
;;;187    temp0=*(((char*)&ADR)+1);
0001fa  f89d0001          LDRB     r0,[sp,#1]
;;;188    spi1(temp0);
0001fe  f7fffffe          BL       spi1
;;;189    temp0=*((char*)&ADR);
000202  f89d0000          LDRB     r0,[sp,#0]
;;;190    spi1(temp0);
000206  f7fffffe          BL       spi1
;;;191    temp0=spi1(0xff);
00020a  20ff              MOVS     r0,#0xff
00020c  f7fffffe          BL       spi1
000210  4603              MOV      r3,r0
;;;192    temp1=spi1(0xff);
000212  f04f00ff          MOV      r0,#0xff
000216  f7fffffe          BL       spi1
00021a  4605              MOV      r5,r0
;;;193    temp2=spi1(0xff);
00021c  f04f00ff          MOV      r0,#0xff
000220  f7fffffe          BL       spi1
000224  4604              MOV      r4,r0
;;;194    temp_i=spi1(0xff);
000226  f04f00ff          MOV      r0,#0xff
00022a  f7fffffe          BL       spi1
;;;195    temp_i<<=8;
00022e  ea4f2000          LSL      r0,r0,#8
;;;196    temp_i+=temp2;
000232  4420              ADD      r0,r0,r4
;;;197    temp_i<<=8;
000234  ea4f2100          LSL      r1,r0,#8
;;;198    temp_i+=temp1;
000238  eb010005          ADD      r0,r1,r5
;;;199    temp_i<<=8;
00023c  ea4f2100          LSL      r1,r0,#8
;;;200    temp_i+=temp0;
000240  440b              ADD      r3,r3,r1
;;;201    CS_OFF
000242  6810              LDR      r0,[r2,#0]
000244  f4401080          ORR      r0,r0,#0x100000
000248  6010              STR      r0,[r2,#0]
00024a  6990              LDR      r0,[r2,#0x18]
00024c  f4401080          ORR      r0,r0,#0x100000
000250  6190              STR      r0,[r2,#0x18]
;;;202    CS_OFF
000252  6810              LDR      r0,[r2,#0]
000254  f4401080          ORR      r0,r0,#0x100000
000258  6010              STR      r0,[r2,#0]
00025a  6990              LDR      r0,[r2,#0x18]
00025c  f4401080          ORR      r0,r0,#0x100000
000260  6190              STR      r0,[r2,#0x18]
;;;203    spi1_unconfig();
000262  f7fffffe          BL       spi1_unconfig
;;;204    return temp_i;
000266  4618              MOV      r0,r3
;;;205    }
000268  bd38              POP      {r3-r5,pc}
;;;206    
                          ENDP

                  lc640_read_long_ptr PROC
;;;208    //Чтение из м-мы 4 байт по адр. ADR
;;;209    void lc640_read_long_ptr(int ADR,char* out_ptr)
00026a  b513              PUSH     {r0,r1,r4,lr}
;;;210    {
00026c  460c              MOV      r4,r1
                  |L1.622|
;;;211    char temp0/*,temp1,temp2*/;
;;;212    //long temp_i;
;;;213    while(lc640_rdsr()&0x01)
00026e  f7fffffe          BL       lc640_rdsr
000272  07c0              LSLS     r0,r0,#31
000274  d1fb              BNE      |L1.622|
;;;214    	{
;;;215    	}
;;;216    spi1_config();
000276  f7fffffe          BL       spi1_config
;;;217    CS_ON
00027a  4a63              LDR      r2,|L1.1032|
00027c  6810              LDR      r0,[r2,#0]
00027e  f4401080          ORR      r0,r0,#0x100000
000282  6010              STR      r0,[r2,#0]
000284  69d0              LDR      r0,[r2,#0x1c]
000286  f4401080          ORR      r0,r0,#0x100000
00028a  61d0              STR      r0,[r2,#0x1c]
;;;218    spi1(0x03);
00028c  f04f0003          MOV      r0,#3
000290  f7fffffe          BL       spi1
;;;219    temp0=*(((char*)&ADR)+1);
000294  f89d0001          LDRB     r0,[sp,#1]
;;;220    spi1(temp0);
000298  f7fffffe          BL       spi1
;;;221    temp0=*((char*)&ADR);
00029c  f89d0000          LDRB     r0,[sp,#0]
;;;222    spi1(temp0);
0002a0  f7fffffe          BL       spi1
;;;223    out_ptr[0]=spi1(0xff);
0002a4  20ff              MOVS     r0,#0xff
0002a6  f7fffffe          BL       spi1
0002aa  7020              STRB     r0,[r4,#0]
;;;224    out_ptr[1]=spi1(0xff);
0002ac  20ff              MOVS     r0,#0xff
0002ae  f7fffffe          BL       spi1
0002b2  7060              STRB     r0,[r4,#1]
;;;225    out_ptr[2]=spi1(0xff);
0002b4  20ff              MOVS     r0,#0xff
0002b6  f7fffffe          BL       spi1
0002ba  70a0              STRB     r0,[r4,#2]
;;;226    out_ptr[3]=spi1(0xff);
0002bc  20ff              MOVS     r0,#0xff
0002be  f7fffffe          BL       spi1
0002c2  70e0              STRB     r0,[r4,#3]
;;;227    CS_OFF
0002c4  6810              LDR      r0,[r2,#0]
0002c6  f4401080          ORR      r0,r0,#0x100000
0002ca  6010              STR      r0,[r2,#0]
0002cc  6990              LDR      r0,[r2,#0x18]
0002ce  f4401080          ORR      r0,r0,#0x100000
0002d2  6190              STR      r0,[r2,#0x18]
;;;228    CS_OFF
0002d4  6810              LDR      r0,[r2,#0]
0002d6  f4401080          ORR      r0,r0,#0x100000
0002da  6010              STR      r0,[r2,#0]
0002dc  6990              LDR      r0,[r2,#0x18]
0002de  f4401080          ORR      r0,r0,#0x100000
0002e2  6190              STR      r0,[r2,#0x18]
;;;229    spi1_unconfig();
0002e4  e8bd401c          POP      {r2-r4,lr}
0002e8  e7fe              B        spi1_unconfig
;;;230    }
;;;231    
                          ENDP

                  lc640_write PROC
;;;258    //Запись байта in по адресу ADR
;;;259    char lc640_write(int ADR,char in)
0002ea  b513              PUSH     {r0,r1,r4,lr}
;;;260    {
0002ec  460c              MOV      r4,r1
                  |L1.750|
;;;261    char temp; 
;;;262    
;;;263    while(lc640_rdsr()&0x01)
0002ee  f7fffffe          BL       lc640_rdsr
0002f2  07c0              LSLS     r0,r0,#31
0002f4  d1fb              BNE      |L1.750|
;;;264    	{
;;;265    	}
;;;266    lc640_wren();
0002f6  f7fffffe          BL       lc640_wren
;;;267    spi1_config();	
0002fa  f7fffffe          BL       spi1_config
;;;268    CS_ON
0002fe  4a42              LDR      r2,|L1.1032|
000300  6810              LDR      r0,[r2,#0]
000302  f4401080          ORR      r0,r0,#0x100000
000306  6010              STR      r0,[r2,#0]
000308  69d0              LDR      r0,[r2,#0x1c]
00030a  f4401080          ORR      r0,r0,#0x100000
00030e  61d0              STR      r0,[r2,#0x1c]
;;;269    spi1(0x02);
000310  f04f0002          MOV      r0,#2
000314  f7fffffe          BL       spi1
;;;270    temp=*(((char*)&ADR)+1);
000318  f89d0001          LDRB     r0,[sp,#1]
;;;271    spi1(temp);
00031c  f7fffffe          BL       spi1
;;;272    temp=*((char*)&ADR);
000320  f89d0000          LDRB     r0,[sp,#0]
;;;273    spi1(temp);
000324  f7fffffe          BL       spi1
;;;274    temp=spi1(in);
000328  4620              MOV      r0,r4
00032a  f7fffffe          BL       spi1
00032e  4603              MOV      r3,r0
;;;275    CS_OFF
000330  6810              LDR      r0,[r2,#0]
000332  f4401080          ORR      r0,r0,#0x100000
000336  6010              STR      r0,[r2,#0]
000338  6990              LDR      r0,[r2,#0x18]
00033a  f4401080          ORR      r0,r0,#0x100000
00033e  6190              STR      r0,[r2,#0x18]
;;;276    CS_OFF
000340  6810              LDR      r0,[r2,#0]
000342  f4401080          ORR      r0,r0,#0x100000
000346  6010              STR      r0,[r2,#0]
000348  6990              LDR      r0,[r2,#0x18]
00034a  f4401080          ORR      r0,r0,#0x100000
00034e  6190              STR      r0,[r2,#0x18]
;;;277    spi1_unconfig(); 
000350  f7fffffe          BL       spi1_unconfig
;;;278    return temp;
000354  4618              MOV      r0,r3
;;;279    }
000356  bd1c              POP      {r2-r4,pc}
;;;280    
                          ENDP

                  lc640_write_int PROC
;;;282    //Запись слова in по адресу ADR
;;;283    char lc640_write_int(short ADR,short in)
000358  b503              PUSH     {r0,r1,lr}
                  |L1.858|
;;;284    {
;;;285    char temp; 
;;;286    while(lc640_rdsr()&0x01)
00035a  f7fffffe          BL       lc640_rdsr
00035e  07c0              LSLS     r0,r0,#31
000360  d1fb              BNE      |L1.858|
;;;287    	{
;;;288    	}
;;;289    lc640_wren();
000362  f7fffffe          BL       lc640_wren
;;;290    spi1_config();	
000366  f7fffffe          BL       spi1_config
;;;291    CS_ON
00036a  4a27              LDR      r2,|L1.1032|
00036c  6810              LDR      r0,[r2,#0]
00036e  f4401080          ORR      r0,r0,#0x100000
000372  6010              STR      r0,[r2,#0]
000374  69d0              LDR      r0,[r2,#0x1c]
000376  f4401080          ORR      r0,r0,#0x100000
00037a  61d0              STR      r0,[r2,#0x1c]
;;;292    spi1(0x02);
00037c  f04f0002          MOV      r0,#2
000380  f7fffffe          BL       spi1
;;;293    temp=*(((char*)&ADR)+1);
000384  f89d0001          LDRB     r0,[sp,#1]
;;;294    spi1(temp);
000388  f7fffffe          BL       spi1
;;;295    temp=*((char*)&ADR);
00038c  f89d0000          LDRB     r0,[sp,#0]
;;;296    spi1(temp);
000390  f7fffffe          BL       spi1
;;;297    temp=*((char*)&in);
000394  f89d0004          LDRB     r0,[sp,#4]
;;;298    spi1(temp);
000398  f7fffffe          BL       spi1
;;;299    temp=*(((char*)&in)+1);
00039c  f89d3005          LDRB     r3,[sp,#5]
;;;300    spi1(temp);
0003a0  4618              MOV      r0,r3
0003a2  f7fffffe          BL       spi1
;;;301    CS_OFF
0003a6  6810              LDR      r0,[r2,#0]
0003a8  f4401080          ORR      r0,r0,#0x100000
0003ac  6010              STR      r0,[r2,#0]
0003ae  6990              LDR      r0,[r2,#0x18]
0003b0  f4401080          ORR      r0,r0,#0x100000
0003b4  6190              STR      r0,[r2,#0x18]
;;;302    CS_OFF
0003b6  6810              LDR      r0,[r2,#0]
0003b8  f4401080          ORR      r0,r0,#0x100000
0003bc  6010              STR      r0,[r2,#0]
0003be  6990              LDR      r0,[r2,#0x18]
0003c0  f4401080          ORR      r0,r0,#0x100000
0003c4  6190              STR      r0,[r2,#0x18]
;;;303    spi1_unconfig();
0003c6  f7fffffe          BL       spi1_unconfig
;;;304    return temp;
0003ca  4618              MOV      r0,r3
;;;305    }  
0003cc  bd0c              POP      {r2,r3,pc}
;;;306    
                          ENDP

                  lc640_write_long PROC
;;;308    //Запись 4 байт in по адресу ADR
;;;309    char lc640_write_long(int ADR,long in)
0003ce  b503              PUSH     {r0,r1,lr}
                  |L1.976|
;;;310    {
;;;311    char temp; 
;;;312    
;;;313    while(lc640_rdsr()&0x01)
0003d0  f7fffffe          BL       lc640_rdsr
0003d4  07c0              LSLS     r0,r0,#31
0003d6  d1fb              BNE      |L1.976|
;;;314    	{
;;;315    	}
;;;316    lc640_wren();	
0003d8  f7fffffe          BL       lc640_wren
;;;317    spi1_config();
0003dc  f7fffffe          BL       spi1_config
;;;318    CS_ON
0003e0  4a09              LDR      r2,|L1.1032|
0003e2  6810              LDR      r0,[r2,#0]
0003e4  f4401080          ORR      r0,r0,#0x100000
0003e8  6010              STR      r0,[r2,#0]
0003ea  69d0              LDR      r0,[r2,#0x1c]
0003ec  f4401080          ORR      r0,r0,#0x100000
0003f0  61d0              STR      r0,[r2,#0x1c]
;;;319    spi1(0x02);
0003f2  f04f0002          MOV      r0,#2
0003f6  f7fffffe          BL       spi1
;;;320    temp=*(((char*)&ADR)+1);
0003fa  f89d0001          LDRB     r0,[sp,#1]
;;;321    spi1(temp);
0003fe  e005              B        |L1.1036|
                  |L1.1024|
                          DCD      0x40020000
                  |L1.1028|
                          DCD      0x4002c000
                  |L1.1032|
                          DCD      0x2009c000
                  |L1.1036|
00040c  f7fffffe          BL       spi1
;;;322    temp=*((char*)&ADR);
000410  f89d0000          LDRB     r0,[sp,#0]
;;;323    spi1(temp);
000414  f7fffffe          BL       spi1
;;;324    temp=*((char*)&in);
000418  f89d0004          LDRB     r0,[sp,#4]
;;;325    spi1(temp);
00041c  f7fffffe          BL       spi1
;;;326    temp=*(((char*)&in)+1);
000420  f89d0005          LDRB     r0,[sp,#5]
;;;327    spi1(temp);
000424  f7fffffe          BL       spi1
;;;328    temp=*(((char*)&in)+2);
000428  f89d0006          LDRB     r0,[sp,#6]
;;;329    spi1(temp);
00042c  f7fffffe          BL       spi1
;;;330    temp=*(((char*)&in)+3);
000430  f89d3007          LDRB     r3,[sp,#7]
;;;331    spi1(temp);           
000434  4618              MOV      r0,r3
000436  f7fffffe          BL       spi1
;;;332    CS_OFF
00043a  6810              LDR      r0,[r2,#0]
00043c  f4401080          ORR      r0,r0,#0x100000
000440  6010              STR      r0,[r2,#0]
000442  6990              LDR      r0,[r2,#0x18]
000444  f4401080          ORR      r0,r0,#0x100000
000448  6190              STR      r0,[r2,#0x18]
;;;333    CS_OFF  
00044a  6810              LDR      r0,[r2,#0]
00044c  f4401080          ORR      r0,r0,#0x100000
000450  6010              STR      r0,[r2,#0]
000452  6990              LDR      r0,[r2,#0x18]
000454  f4401080          ORR      r0,r0,#0x100000
000458  6190              STR      r0,[r2,#0x18]
;;;334    spi1_unconfig();
00045a  f7fffffe          BL       spi1_unconfig
;;;335    return temp;
00045e  4618              MOV      r0,r3
;;;336    }
000460  bd0c              POP      {r2,r3,pc}
;;;337    
                          ENDP

                  lc640_write_long_ptr PROC
;;;339    //Запись 4 байт in по адресу ADR
;;;340    char lc640_write_long_ptr(int ADR,char* in)
000462  b513              PUSH     {r0,r1,r4,lr}
;;;341    {
000464  460c              MOV      r4,r1
                  |L1.1126|
;;;342    char temp; 
;;;343    
;;;344    while(lc640_rdsr()&0x01)
000466  f7fffffe          BL       lc640_rdsr
00046a  07c0              LSLS     r0,r0,#31
00046c  d1fb              BNE      |L1.1126|
;;;345    	{
;;;346    	}
;;;347    lc640_wren();	
00046e  f7fffffe          BL       lc640_wren
;;;348    spi1_config();
000472  f7fffffe          BL       spi1_config
;;;349    CS_ON
000476  4a1b              LDR      r2,|L1.1252|
000478  6810              LDR      r0,[r2,#0]
00047a  f4401080          ORR      r0,r0,#0x100000
00047e  6010              STR      r0,[r2,#0]
000480  69d0              LDR      r0,[r2,#0x1c]
000482  f4401080          ORR      r0,r0,#0x100000
000486  61d0              STR      r0,[r2,#0x1c]
;;;350    spi1(0x02);
000488  f04f0002          MOV      r0,#2
00048c  f7fffffe          BL       spi1
;;;351    temp=*(((char*)&ADR)+1);
000490  f89d0001          LDRB     r0,[sp,#1]
;;;352    spi1(temp);
000494  f7fffffe          BL       spi1
;;;353    temp=*((char*)&ADR);
000498  f89d0000          LDRB     r0,[sp,#0]
;;;354    spi1(temp);
00049c  f7fffffe          BL       spi1
;;;355    temp=in[0];
0004a0  7820              LDRB     r0,[r4,#0]
;;;356    spi1(temp);
0004a2  f7fffffe          BL       spi1
;;;357    temp=in[1];
0004a6  7860              LDRB     r0,[r4,#1]
;;;358    spi1(temp);
0004a8  f7fffffe          BL       spi1
;;;359    temp=in[2];
0004ac  78a0              LDRB     r0,[r4,#2]
;;;360    spi1(temp);
0004ae  f7fffffe          BL       spi1
;;;361    temp=in[3];
0004b2  78e3              LDRB     r3,[r4,#3]
;;;362    spi1(temp);
0004b4  4618              MOV      r0,r3
0004b6  f7fffffe          BL       spi1
;;;363    
;;;364    CS_OFF
0004ba  6810              LDR      r0,[r2,#0]
0004bc  f4401080          ORR      r0,r0,#0x100000
0004c0  6010              STR      r0,[r2,#0]
0004c2  6990              LDR      r0,[r2,#0x18]
0004c4  f4401080          ORR      r0,r0,#0x100000
0004c8  6190              STR      r0,[r2,#0x18]
;;;365    CS_OFF  
0004ca  6810              LDR      r0,[r2,#0]
0004cc  f4401080          ORR      r0,r0,#0x100000
0004d0  6010              STR      r0,[r2,#0]
0004d2  6990              LDR      r0,[r2,#0x18]
0004d4  f4401080          ORR      r0,r0,#0x100000
0004d8  6190              STR      r0,[r2,#0x18]
;;;366    spi1_unconfig();
0004da  f7fffffe          BL       spi1_unconfig
;;;367    return temp;
0004de  4618              MOV      r0,r3
;;;368    }		
0004e0  bd1c              POP      {r2-r4,pc}
                          ENDP

0004e2  0000              DCW      0x0000
                  |L1.1252|
                          DCD      0x2009c000

                          AREA ||area_number.2||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.2||, ||.text||
                  spi1_config_mcp2515 PROC
;;;9      
;;;10     char spi1(char in)
000000  480c              LDR      r0,|L2.52|
;;;11     {
;;;12     
;;;13      
;;;14     
;;;15     LPC_SPI->SPDR=in;
000002  6801              LDR      r1,[r0,#0]
;;;16     while(!(LPC_SPI->SPSR&(1<<7)));
000004  f0414140          ORR      r1,r1,#0xc0000000
000008  6001              STR      r1,[r0,#0]
;;;17     return LPC_SPI->SPDR;
00000a  6841              LDR      r1,[r0,#4]
00000c  f0210103          BIC      r1,r1,#3
;;;18     
;;;19      
;;;20     
;;;21     }
000010  6041              STR      r1,[r0,#4]
000012  6841              LDR      r1,[r0,#4]
000014  f041010c          ORR      r1,r1,#0xc
000018  6041              STR      r1,[r0,#4]
00001a  6841              LDR      r1,[r0,#4]
00001c  f0410130          ORR      r1,r1,#0x30
000020  6041              STR      r1,[r0,#4]
000022  4805              LDR      r0,|L2.56|
000024  f04f0120          MOV      r1,#0x20
000028  60c1              STR      r1,[r0,#0xc]
00002a  f04f0138          MOV      r1,#0x38
00002e  6001              STR      r1,[r0,#0]
000030  4770              BX       lr
;;;22     
                          ENDP

000032  0000              DCW      0x0000
                  |L2.52|
                          DCD      0x4002c000
                  |L2.56|
                          DCD      0x40020000

                          AREA ||area_number.3||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.3||, ||.text||
                  lc640_read_str PROC
;;;9      
;;;10     char spi1(char in)
000000  b577              PUSH     {r0-r2,r4-r6,lr}
;;;11     {
;;;12     
;;;13      
;;;14     
;;;15     LPC_SPI->SPDR=in;
000002  460c              MOV      r4,r1
;;;16     while(!(LPC_SPI->SPSR&(1<<7)));
000004  4616              MOV      r6,r2
                  |L3.6|
000006  f7fffffe          BL       lc640_rdsr
;;;17     return LPC_SPI->SPDR;
00000a  07c0              LSLS     r0,r0,#31
00000c  d1fb              BNE      |L3.6|
;;;18     
;;;19      
;;;20     
;;;21     }
00000e  f7fffffe          BL       spi1_config
000012  4d1b              LDR      r5,|L3.128|
000014  6828              LDR      r0,[r5,#0]
000016  f4401080          ORR      r0,r0,#0x100000
00001a  6028              STR      r0,[r5,#0]
00001c  69e8              LDR      r0,[r5,#0x1c]
00001e  f4401080          ORR      r0,r0,#0x100000
000022  61e8              STR      r0,[r5,#0x1c]
000024  f04f0003          MOV      r0,#3
000028  f7fffffe          BL       spi1
00002c  f89d0001          LDRB     r0,[sp,#1]
000030  f7fffffe          BL       spi1
000034  f89d0000          LDRB     r0,[sp,#0]
000038  f7fffffe          BL       spi1
00003c  f04f0300          MOV      r3,#0
000040  e007              B        |L3.82|
                  |L3.66|
000042  20ff              MOVS     r0,#0xff
000044  f7fffffe          BL       spi1
000048  f8040b01          STRB     r0,[r4],#1
00004c  f1030301          ADD      r3,r3,#1
000050  b2db              UXTB     r3,r3
                  |L3.82|
000052  42b3              CMP      r3,r6
000054  d3f5              BCC      |L3.66|
000056  6828              LDR      r0,[r5,#0]
000058  f4401080          ORR      r0,r0,#0x100000
00005c  6028              STR      r0,[r5,#0]
00005e  69a8              LDR      r0,[r5,#0x18]
000060  f4401080          ORR      r0,r0,#0x100000
000064  61a8              STR      r0,[r5,#0x18]
000066  6828              LDR      r0,[r5,#0]
000068  f4401080          ORR      r0,r0,#0x100000
00006c  6028              STR      r0,[r5,#0]
00006e  69a8              LDR      r0,[r5,#0x18]
000070  f4401080          ORR      r0,r0,#0x100000
000074  61a8              STR      r0,[r5,#0x18]
000076  e8bd407e          POP      {r1-r6,lr}
00007a  f7ffbffe          B.W      spi1_unconfig
;;;22     
                          ENDP

00007e  0000              DCW      0x0000
                  |L3.128|
                          DCD      0x2009c000
